// Top-level build file where you can add configuration options common to all sub-projects/modules.
buildscript {
    ext.kotlin_version = '1.3.21'

    //Dependency versions
    ext.rxandroid_version = '2.0.2'
    ext.rxjava2_version = '2.1.1'
    ext.retrofit_version = '2.4.0'
    ext.lifecycle_version = '2.1.0-alpha02'
    ext.espresso_version = '3.1.1'
    ext.room_version = '1.1.1'

    repositories {
        google()
        jcenter()

    }
    dependencies {
        classpath 'com.android.tools.build:gradle:3.3.2'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
        classpath 'com.dicedmelon.gradle:jacoco-android:0.1.4'
    }
}

allprojects {
    repositories {
        google()
        jcenter()
        maven { url "https://jitpack.io" }
        maven { url "https://maven.google.com" }
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}


def coverageSourceDirs = [
        'src/main/java',
        'src/debug/java',
        'src/mock/java',
        'src/prod/java'
]

task jacocoTestReport(type: JacocoReport, dependsOn: ['clean']) {
    description = 'Generate JaCoCo coverage report'
    group = 'Reporting'

    reports {
        xml.enabled = true
        html.enabled = true
    }

    def fileFilter = [
            '**/R.class',
            '**/R$*.class',
            '**/*$ViewInjector*.*',
            '**/*$ViewBinder*.*',
            '**/BuildConfig.*',
            '**/Manifest*.*',
            '**/*Test*.*',
            'android/**/*.*',
            '**/*Fragment.*',
            '**/*Activity.*',
            'com/example/newswatchtower5/services/NewsServiceBuilder.kt'
    ]

    def debugTree = fileTree(dir: "$buildDir/intermediates/classes/debug", excludes: fileFilter)
    def kotlinDebugTree = fileTree(dir: "$buildDir/tmp/kotlin-classes/prodDebug", excludes: fileFilter)

    classDirectories = files([debugTree], [kotlinDebugTree])
    sourceDirectories = files(coverageSourceDirs, "src/main/kotlin")
    executionData     = fileTree(
            dir     : "$buildDir",
            include : ['**/*.exec', '**/*.ec']
    )
}

task unifiedCoverageReport(dependsOn: ['clean', 'jacocoTestReport', 'createProdDebugCoverageReport']) {
    description = 'Generates coverage report which includes both local unit tests and instrumentation tests'
    group = 'Reporting'
}
